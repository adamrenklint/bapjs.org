title: Boombap
---
version: 3
---
text:

A minimistic boombap pattern, using lots of sample layers in a funky arrangement, featuring a manual delay made with the volume param.

---
source:

```js
var drumKit = bap.kit();
// if our sample layer has no parameters, just pass the src
drumKit.slot(1).layer('/site/files/sounds/kick.wav');
drumKit.slot(2).layer('/site/files/sounds/snare.wav');
// lower the volume of the hihat directly on the sample layer
// so we don't have to do it on each note
drumKit.slot(3).layer(bap.sample({
  src: '/site/files/sounds/hihat.wav',
  volume: 50
}));

var plongKit = bap.kit();
plongKit.slot(1).layer(bap.sample({
  src: '/site/files/sounds/plong1.wav',
  duration: 95
}));
plongKit.slot(2).layer(bap.sample({
  src: '/site/files/sounds/plong2.wav',
  duration: 60
}));

var stringKit = bap.kit();
stringKit.slot(1).layer(bap.sample({
  src: '/site/files/sounds/string1.wav',
  duration: 90
}));
stringKit.slot(2).layer(bap.sample({
  src: '/site/files/sounds/string2.wav',
  duration: 70
}));
stringKit.slot(3).layer(bap.sample({
  src: '/site/files/sounds/string3.wav',
  duration: 45
}));

var bassKit = bap.kit();
bassKit.slot(1).layer(bap.sample({
  src: '/site/files/sounds/bass.wav',
  attack:   0.01,
  release: 0.01
}));

var boombapPattern = bap.pattern({
  bars:   2,
  tempo: 90
});

// add lazy kicks and eager snares
// http://adamrenklint.com/lazy-kicks-eager-snares
boombapPattern.channel(1).add(
  ['1.1.01', 'A01'],
  ['1.1.51', 'A01', null, 80],
  ['1.1.91', 'A02'],
  ['1.2.88', 'A01'],
  ['1.3.75', 'A01'],
  ['1.3.91', 'A02'],
  ['1.4.72', 'A01', null, 80],
  ['2.1.91', 'A02'],
  ['2.1.51', 'A01', null, 70],
  ['2.3.51', 'A01', null, 80],
  ['2.3.88', 'A01'],
  ['2.4.03', 'A02']
);

// simple on-point hihat with one lazy note at the end
boombapPattern.channel(2).add(
  ['*.odd.01',   'A03', null, 70],
  ['*.even.01', 'A03', null, 80],
  ['*.4.53',       'A03', null, 60]
);

// minimal use of the plongs
boombapPattern.channel(3).add(
  ['1.1.01', 'B01'],
  ['1.4.90', 'B02', null, 40],
  ['2.1.52', 'B02', null, 70]
);

// the rhythm of the string pads are built from
// a manual delay using the sample volume parameter
boombapPattern.channel(4).add(
  ['1.2.05', 'C03', null, 60],
  ['1.2.51', 'C03', null, 40],
  ['1.3.05', 'C03', null, 20],
  ['1.3.51', 'C03', null, 5],
  ['1.3.75', 'C01', null, 60],
  ['1.4.52', 'C01', null, 20],
  ['2.2.05', 'C03', null, 60],
  ['2.2.50', 'C02', null, 60],
  ['2.3.25', 'C01', 70,     60],
  ['2.4.01', 'C01', 85,     30],
  ['2.4.75', 'C01', 85,     10]
);

boombapPattern.channel(5).add(
  ['1.1.01', 'D01', 60,   80, -90],
  ['1.2.72', 'D01', 15,   50, -90],
  ['1.3.02', 'D01', 40,   80, -90],
  ['1.4.01', 'D01', 40,   60, -72],
  ['1.4.51', 'D01', 100, 80, -52],
  ['2.3.51', 'D01', 60,   80, -116],
  ['2.4.51', 'D01', 40,   80, -96]
);

// most important step, connect kits to the pattern
boombapPattern
  .kit('A', drumKit)
  .kit('B', plongKit)
  .kit('C', stringKit)
  .kit('D', bassKit);

bap.clock.sequence = boombapPattern;
```
